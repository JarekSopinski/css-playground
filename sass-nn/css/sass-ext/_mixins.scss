// mixins

@mixin banner {
    width: 100%;
    position: relative;
    color: white;
    .banner-content {
        position: absolute;
        top: 50px;
        width: 100%;
    }
    img {
        width: 100%;
    }
    span {
        font-size: $bannerHeading;
        display: block;
        text-transform: uppercase;
        font-weight: bold;
        @include mediaQuery(3000px, 1200px){
            font-size: 68px;
        }
    }
    span.title {
        font-weight: normal;
        margin-bottom: 30px;
    }
}

@mixin clearFix{
    &:after{
        content: '';
        display: block;
        clear: both;
    }
}

@mixin grid($colsCount, $margin) {
    float: left;
    margin-right: $margin;
    margin-bottom: $margin;
    // formula for setting equal width:
    width: ( (100% - (($colsCount - 1) * $margin)) / $colsCount );
    // target last child by the numer of cols in a row ( #{} is a sass interpolation ):
    &:nth-child(#{$colsCount}n){
        margin-right: 0;
    }
}

/*
A mixin with optional number of arguments. If statement checks number
of arguments and in case of two, applies media query for both
width and height. nth() selects argument's index.
*/
@mixin mediaQuery($args...) {
    @if length($args) == 1 {
        @media screen and (max-width: nth($args, 1)){
            @content;
        }
    }
    @if length($args) == 2 {
        @media screen and (max-width: nth($args, 1)) and (min-width: nth($args, 2)) {
            @content;
        }
    }
}